name: Jenkins Pipeline

on:
  push:
    branches:
      - master
env:
    JENKINS_JOB: new_job
    JENKINS_TOKEN:  11a73fb95e76eae6a1533e47323be8d04a
    JENKINS_URL: http://18.142.244.1:8080/
    JENKINS_USERNAME: manoj

jobs:
  jenkins-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Trigger Jenkins Pipeline
        env:
          JENKINS_URL: ${{env.JENKINS_URL}}
          JENKINS_JOB: ${{env.JENKINS_JOB}}
          JENKINS_TOKEN: ${{ env.JENKINS_TOKEN }}
        run: |
          curl -X POST -u "${JENKINS_USERNAME}:${JENKINS_TOKEN}" "${JENKINS_URL}/job/${JENKINS_JOB}/build"

      - name: Wait for Jenkins Pipeline
        env:
          JENKINS_URL: ${{env.JENKINS_URL}}
          JENKINS_JOB: ${{env.JENKINS_JOB}}
          JENKINS_TOKEN: ${{ env.JENKINS_TOKEN }}
        run: |
          while [[ "$(curl -s -u "${JENKINS_USERNAME}:${JENKINS_TOKEN}" "${JENKINS_URL}/job/${JENKINS_JOB}/lastBuild/api/json" | jq -r '.building')" == "true" ]]; do
              sleep 10
          done

      - name: Get Jenkins Pipeline Status
        env:
          JENKINS_URL: ${{env.JENKINS_URL}}
          JENKINS_JOB: ${{env.JENKINS_JOB}}
          JENKINS_TOKEN: ${{ env.JENKINS_TOKEN }}
        run: |
          JENKINS_STATUS=$(curl -s -u "${JENKINS_USERNAME}:${JENKINS_TOKEN}" "${JENKINS_URL}/job/${JENKINS_JOB}/lastBuild/api/json" | jq -r '.result')

          if [[ "${JENKINS_STATUS}" == "SUCCESS" ]]; then
            echo "Jenkins pipeline succeeded."
            # Update GitHub check run status as successful
            # Use GitHub Checks API here
          else
            echo "Jenkins pipeline failed."
            # Update GitHub check run status as failed
            # Use GitHub Checks API here
          fi
