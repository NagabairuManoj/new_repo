name: Jenkins Pipeline for test

on:
  push:
    branches:
       ["master", "tests" ]

jobs:
  jenkins-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Trigger Jenkins Pipeline
        env:
          JENKINS_URL: http://18.142.244.1:8080/
          JENKINS_JOB: new_job
          JENKINS_TOKEN: 11a73fb95e76eae6a1533e47323be8d04a
        run: |
          curl -X POST -u "manoj:11a73fb95e76eae6a1533e47323be8d04a" "http://18.142.244.1:8080//job/new_job/build"

      - name: Wait for Jenkins Pipeline
        env:
          JENKINS_URL: http://18.142.244.1:8080/
          JENKINS_JOB: new_job
          JENKINS_TOKEN: http://18.142.244.1:8080/
        run: |
          while [[ "$(curl -s -u "manoj:11a73fb95e76eae6a1533e47323be8d04a" "http://18.142.244.1:8080//job/new_job/lastBuild/api/json" | jq -r '.building')" == "true" ]]; do
              sleep 10
          done

      - name: Get Jenkins Pipeline Status
        env:
          JENKINS_URL: http://18.142.244.1:8080/
          JENKINS_JOB: new_job
          JENKINS_TOKEN: 11a73fb95e76eae6a1533e47323be8d04a
        run: |
          JENKINS_STATUS=$(curl -s -u "manoj:11a73fb95e76eae6a1533e47323be8d04a" "http://18.142.244.1:8080/job/new_job/lastBuild/api/json" | jq -r '.result')

          if [[ "${JENKINS_STATUS}" == "SUCCESS" ]]; then
            echo "Jenkins pipeline succeeded."
            # Update GitHub check run status as successful
            # Use GitHub Checks API here
          else
            echo "Jenkins pipeline failed."
            # Update GitHub check run status as failed
            # Use GitHub Checks API here
          fi
